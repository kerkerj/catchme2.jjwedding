# You may add here your
# server {
#       ...
# }
# statements for each of your virtual hosts to this file

##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##
upstream app_server {
  server express:5566;
}

proxy_cache_path /tmp/nginx_nodejs keys_zone=app_server_cache:50m;

server {
  listen 80;
  #listen [::]:80 default_server ipv6only=on;

  #root /usr/share/nginx/html;
  #index index.html index.htm;

  # Make site accessible from http://localhost/
  server_name localhost;

  charset utf-8;

  access_log off;
  #error_log /var/www/nodejs_app/logs/error.log crit;

  root   /app/public;

  location / {
    proxy_pass http://app_server;
    proxy_http_version 1.1;

    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-NginX-Proxy true;

    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
    # First attempt to serve request as file, then
    # as directory, then fall back to displaying a 404.
    #try_files $uri $uri/ =404;
    # Uncomment to enable naxsi on this location
    # include /etc/nginx/naxsi.rules

    proxy_intercept_errors on;
    error_page 400 502 /50x.html;
  }

  location /game1 {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_cache app_server_cache;  # 使用者這個 nginx cache 設定
    proxy_ignore_headers "Cache-Control" "Set-Cookie"; # nginx cache 忽略特定 header
    proxy_hide_header Set-Cookie;   # 不回傳 cookie 修改給 client
    proxy_cache_lock on;            # 沒有cache時同一個key只有一個連線去取得cache其他人等他
    proxy_cache_use_stale updating; # 更新 cache時先丟舊的出去
    proxy_cache_valid 200 20s;       # cache 20s
    proxy_cache_valid any  5s;       # cache 5秒
    proxy_cache_key $host$uri$is_args$args;
    proxy_pass http://app_server;
  }

  location /game2 {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_cache app_server_cache;  # 使用者這個 nginx cache 設定
    proxy_ignore_headers "Cache-Control" "Set-Cookie"; # nginx cache 忽略特定 header
    proxy_hide_header Set-Cookie;   # 不回傳 cookie 修改給 client
    proxy_cache_lock on;            # 沒有cache時同一個key只有一個連線去取得cache其他人等他
    proxy_cache_use_stale updating; # 更新 cache時先丟舊的出去
    proxy_cache_valid 200 20s;       # cache 20s
    proxy_cache_valid any  5s;       # cache 5秒
    proxy_cache_key $host$uri$is_args$args;
    proxy_pass http://app_server;
  }

  location /game3 {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_cache app_server_cache;  # 使用者這個 nginx cache 設定
    proxy_ignore_headers "Cache-Control" "Set-Cookie"; # nginx cache 忽略特定 header
    proxy_hide_header Set-Cookie;   # 不回傳 cookie 修改給 client
    proxy_cache_lock on;            # 沒有cache時同一個key只有一個連線去取得cache其他人等他
    proxy_cache_use_stale updating; # 更新 cache時先丟舊的出去
    proxy_cache_valid 200 20s;       # cache 20s
    proxy_cache_valid any  5s;       # cache 5秒
    proxy_cache_key $host$uri$is_args$args;
    proxy_pass http://app_server;
  }

  location /css {
    alias /app/public/css;
  }

  location /img{
    alias /app/public/img;
  }

  location /js{
    alias /app/public/js;
  }

  # Only for nginx-naxsi used with nginx-naxsi-ui : process denied requests
  #location /RequestDenied {
  #       proxy_pass http://127.0.0.1:8080;
  #}

  # error_page 404 /404.html;

  # redirect server error pages to the static page /50x.html
  #
  #error_page 500 502 503 504 /50x.html;
  #location = /50x.html {
  #       root /usr/share/nginx/html;
  #}

  # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
  #
  #location ~ \.php$ {
  #       fastcgi_split_path_info ^(.+\.php)(/.+)$;
  #       # NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
  #
  #       # With php5-cgi alone:
  #       fastcgi_pass 127.0.0.1:9000;
  #       # With php5-fpm:
  #       fastcgi_pass unix:/var/run/php5-fpm.sock;
  #       fastcgi_index index.php;
  #       include fastcgi_params;
  #}

  # deny access to .htaccess files, if Apache's document root
  # concurs with nginx's one
  #
  #location ~ /\.ht {
  #       deny all;
  #}
}
# another virtual host using mix of IP-, name-, and port-based configuration
#
#server {
#       listen 8000;
#       listen somename:8080;
#       server_name somename alias another.alias;
#       root html;
#       index index.html index.htm;
#
#       location / {
#               try_files $uri $uri/ =404;
#       }
#}


# HTTPS server
#
#server {
#       listen 443;
#       server_name localhost;
#
#       root html;
#       index index.html index.htm;
#
#       ssl on;
#       ssl_certificate cert.pem;
#       ssl_certificate_key cert.key;
#
#       ssl_session_timeout 5m;
#
#       ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
#       ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
#       ssl_prefer_server_ciphers on;
#
#       location / {
#               try_files $uri $uri/ =404;
#       }
#}
